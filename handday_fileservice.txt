def project_tag=[:]
def project_list=["Handday.FileService":"fileservice"]
def projectsrc_list=["fileservice":"https://gitlab.facehand.cn/dzh/handday.fileservice.git"]
def projects_list="$project".split(',')
def projectsrcs=[]

def image_tag=[:]
projects_list.each{
    projectsrcs.add("${project_list[(it)]}")
}

node("docker_build"){
    projectsrcs.unique().each{
        if ("${ fileExists it }"=="false"){
            sh label: '', script: "mkdir -p $it"
        }
        
        dir("$it"){
            def a="$Branch"
            def b=a.split("origin/")[1]
            echo "$b"
            git branch: "$b", credentialsId: '957ca79a-205d-4e70-816f-d09d716fc699', url: "${projectsrc_list[(it)]}"
            def project_dockerfile=sh(script: "/opt/go/zztx_cli/main find --src /data/jenkins/workspace/Handday_Fileservice/$it/  --fn Dockerfile", returnStdout:true).trim()
            def project_dockerfiles="$project_dockerfile".split('\n')
            
            
			
            
            def new_project_name="$project".toLowerCase()
            
            //处理version迭代版本
            
            if ("${fileExists 'cur_version.txt'}" == "false"){
            //if ("$is_version" == "false"){
                sh(script: "echo '$new_project_name:v1'>cur_version.txt",returnStdout:true)
            }

            if ("${fileExists 'cur_tag.txt'}"=="false"){
            //if ("$is_tag" == "false"){
                sh(script: "echo '$new_project_name:v1-rc0'>cur_tag.txt",returnStdout:true)
            }

            if ("$closing" == "false"){
                if ("$fix_bug" == "false"){
                    def version_tag=sh(script:"sed -n '/$new_project_name/p' cur_version.txt | awk -F ':v' '{print \$2}'",returnStdout:true)
                    def version=version_tag.toInteger()
                    echo "=========当前版本version======="
                    echo "$version"
        
                    def old_tag=sh(script:"sed -n '/$new_project_name/p' cur_tag.txt | awk -F 'rc' '{print \$2}'",returnStdout:true)
                    tag = old_tag.toInteger()+1
                    echo "==========当前版本tag========="
                    echo "$tag"
                    sh(script: "name=${new_project_name};"+"oldtag=${old_tag}"+"newtag=${tag};"+"version=${version};"+'sed -i "s/$name:v$version-rc$oldtag/$name:v$version-rc$newtag/g" cur_tag.txt')
                    full_tag = "v$version-rc$tag"
                    git_tag = "$full_tag"
                    echo "================未封版full_tag============"
                    echo "$full_tag"
        
        
                }
                else{
                    def version_tag=sh(script:"sed -n '/$new_project_name/p' last_version.txt | awk -F ':v' '{print \$2}'",returnStdout:true)
                    def version=version_tag.toInteger()
                    echo "=========fixbug版本version======="
                    echo "$version"
        
                    def old_tag=sh(script:"sed -n '/$new_project_name/p' last_tag.txt | awk -F 'rc' '{print \$2}'",returnStdout:true)
                    tag = old_tag.toInteger()+1
                    echo "==========fixbug版本tag========="
                    echo "$tag"
                    sh(script: "name=${new_project_name};"+"oldtag=${old_tag}"+"newtag=${tag};"+"version=${version};"+'sed -i "s/$name:v$version-rc$oldtag/$name:v$version-rc$newtag/g" last_tag.txt')
                    if ("${fileExists 'fixbug.txt'}"=="false"){
                        sh(script: "echo '$new_project_name:v$version-fix0' > fixbug.txt",returnStdout:true)
                    }
                    full_tag = "v$version-rc$tag"
                    git_tag = "$full_tag"
                    echo "================未封版full_tag============"
                    echo "$full_tag"
                }
        
            }
            else {
                if ("$fix_bug" == "false"){
                    def version_tag=sh(script:"sed -n '/$new_project_name/p' cur_version.txt | awk -F ':v' '{print \$2}'",returnStdout:true)
                    def version=version_tag.toInteger()
                    full_tag = "v$version"
                    git_tag = "$full_tag"
                    def new_version=version.toInteger()+1
                    echo "======正常封版========"
                    echo "正常封版tag: $full_tag"
                    sh(script: "name=${new_project_name};"+"oldversion=${version};"+"newversion=${new_version};"+'sed -i "s/$name:v$oldversion/$name:v$newversion/g" cur_version.txt')
                    sh(script: "echo '$new_project_name:v$version' > last_version.txt",returnStdout:true)
        
                    def old_tag=sh(script:"sed -n '/$new_project_name/p' cur_tag.txt|awk -F 'rc' '{print \$2}'",returnStdout:true)
                    tag=old_tag.toInteger()+1
                    sh(script: "name=${new_project_name};"+"oldtag=${old_tag}"+"newtag=${tag};"+"version=${version};"+"new_version=${new_version};"+'sed -i "s/$name:v$version-rc$oldtag/$name:v$new_version-rc0/g" cur_tag.txt')
                    sh(script: "echo 'v$version-rc$old_tag' > last_tag.txt ",returnStdout:true)
                }
                else {
                    def version_tag=sh(script:"sed -n '/$new_project_name/p' last_version.txt | awk -F ':v' '{print \$2}'",returnStdout:true)
                    def version=version_tag.toInteger()
                    fix_version = sh(script:"sed -n '/$new_project_name/p' fixbug.txt | awk -F 'fix' '{print \$2}'",returnStdout:true)
                    def new_fix_version = fix_version.toInteger()+1
        
                    sh(script: "name=${new_project_name};"+"old_fix_veresion=${fix_version}"+"new_fix_version=${new_fix_version}"+"version=${version};"+'sed -i "s/$name:v$version-fix$old_fix_veresion/$name:v$version-fix$new_fix_version/g" fixbug.txt')
                    sh(script: "echo '$new_project_name:v$version-fix$new_fix_version' > fixbug.txt",returnStdout:true)
                    full_tag = "v$version-fix$new_fix_version"
                    git_tag = "$full_tag"
                    echo "=======fixbug版本封版=========="
                    echo "fixbug版本封版： $full_tag"
        
                }
        
            }

            image_tag["$new_project_name"]="$full_tag"
            project_tag."${new_project_name}"="${full_tag}"
            sh(script: """
            docker build -f Dockerfile -t handday.tencentcloudcr.com/handday/$new_project_name:$full_tag .""") 
            sh(script:"docker push handday.tencentcloudcr.com/handday/$new_project_name:$full_tag")
  
        }
        
    }
}

